/*Generated by WaveMaker Studio*/
package com.testutils.testdb;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.sql.Timestamp;
import java.util.List;
import java.util.Objects;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

/**
 * EmployeeUtf8mb4 generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`employee_utf8mb4`", uniqueConstraints = {
        @UniqueConstraint(name = "`ldap_uid_UNIQUE`", columnNames = {"`ldap_uid`"}),
        @UniqueConstraint(name = "`employee_id_UNIQUE`", columnNames = {"`employee_code`"}),
        @UniqueConstraint(name = "`employee_email_active_unique_idx`", columnNames = {"`email`", "`active`"})})
public class EmployeeUtf8mb4 implements Serializable {

    private Long id;
    private long employeeCode;
    private String email;
    private String ldapUid;
    private boolean active;
    private boolean isManager;
    private String employmentType;
    private Timestamp createdDate;
    private Timestamp lastModifiedDate;
    private List<EmployeeSkillsUtf8UnicodeCi> employeeSkillsUtf8unicodeCis;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id`", nullable = false, scale = 0, precision = 19)
    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @Column(name = "`employee_code`", nullable = false, scale = 0, precision = 19)
    public long getEmployeeCode() {
        return this.employeeCode;
    }

    public void setEmployeeCode(long employeeCode) {
        this.employeeCode = employeeCode;
    }

    @Column(name = "`email`", nullable = true, length = 100)
    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    @Column(name = "`ldap_uid`", nullable = true, length = 100)
    public String getLdapUid() {
        return this.ldapUid;
    }

    public void setLdapUid(String ldapUid) {
        this.ldapUid = ldapUid;
    }

    @Column(name = "`active`", nullable = false)
    public boolean isActive() {
        return this.active;
    }

    public void setActive(boolean active) {
        this.active = active;
    }

    @Column(name = "`is_manager`", nullable = false)
    public boolean isIsManager() {
        return this.isManager;
    }

    public void setIsManager(boolean isManager) {
        this.isManager = isManager;
    }

    @Column(name = "`employment_type`", nullable = true, length = 50)
    public String getEmploymentType() {
        return this.employmentType;
    }

    public void setEmploymentType(String employmentType) {
        this.employmentType = employmentType;
    }

    @Column(name = "`created_date`", nullable = false)
    public Timestamp getCreatedDate() {
        return this.createdDate;
    }

    public void setCreatedDate(Timestamp createdDate) {
        this.createdDate = createdDate;
    }

    @Column(name = "`last_modified_date`", nullable = false)
    public Timestamp getLastModifiedDate() {
        return this.lastModifiedDate;
    }

    public void setLastModifiedDate(Timestamp lastModifiedDate) {
        this.lastModifiedDate = lastModifiedDate;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE, mappedBy = "employeeUtf8mb4")
    public List<EmployeeSkillsUtf8UnicodeCi> getEmployeeSkillsUtf8unicodeCis() {
        return this.employeeSkillsUtf8unicodeCis;
    }

    public void setEmployeeSkillsUtf8unicodeCis(List<EmployeeSkillsUtf8UnicodeCi> employeeSkillsUtf8unicodeCis) {
        this.employeeSkillsUtf8unicodeCis = employeeSkillsUtf8unicodeCis;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof EmployeeUtf8mb4)) return false;
        final EmployeeUtf8mb4 employeeUtf8mb4 = (EmployeeUtf8mb4) o;
        return Objects.equals(getId(), employeeUtf8mb4.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}

