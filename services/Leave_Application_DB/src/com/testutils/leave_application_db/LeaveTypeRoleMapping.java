/*Generated by WaveMaker Studio*/
package com.testutils.leave_application_db;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * LeaveTypeRoleMapping generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`leave_type_role_mapping`")
public class LeaveTypeRoleMapping implements Serializable {

    private Integer id;
    private int leaveTypeId;
    private int roleId;
    private Roles roles;
    private LeaveTypes leaveTypes;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`leave_type_id`", nullable = false, scale = 0, precision = 7)
    public int getLeaveTypeId() {
        return this.leaveTypeId;
    }

    public void setLeaveTypeId(int leaveTypeId) {
        this.leaveTypeId = leaveTypeId;
    }

    @Column(name = "`role_id`", nullable = false, scale = 0, precision = 10)
    public int getRoleId() {
        return this.roleId;
    }

    public void setRoleId(int roleId) {
        this.roleId = roleId;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`role_id`", referencedColumnName = "`Role_ID`", insertable = false, updatable = false)
    public Roles getRoles() {
        return this.roles;
    }

    public void setRoles(Roles roles) {
        if(roles != null) {
            this.roleId = roles.getRoleId();
        }

        this.roles = roles;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`leave_type_id`", referencedColumnName = "`id`", insertable = false, updatable = false)
    public LeaveTypes getLeaveTypes() {
        return this.leaveTypes;
    }

    public void setLeaveTypes(LeaveTypes leaveTypes) {
        if(leaveTypes != null) {
            this.leaveTypeId = leaveTypes.getId();
        }

        this.leaveTypes = leaveTypes;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof LeaveTypeRoleMapping)) return false;
        final LeaveTypeRoleMapping leaveTypeRoleMapping = (LeaveTypeRoleMapping) o;
        return Objects.equals(getId(), leaveTypeRoleMapping.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}

