/*Generated by WaveMaker Studio*/
package com.testutils.leave_application_db;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.List;
import java.util.Objects;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

/**
 * Roles generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`roles`")
public class Roles implements Serializable {

    private Integer roleId;
    private String roleName;
    private List<EmpRoles> empRoleses;
    private List<LeaveTypeRoleMapping> leaveTypeRoleMappings;
    private List<OtherLeavesRoleMapping> otherLeavesRoleMappings;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`Role_ID`", nullable = false, scale = 0, precision = 10)
    public Integer getRoleId() {
        return this.roleId;
    }

    public void setRoleId(Integer roleId) {
        this.roleId = roleId;
    }

    @Column(name = "`Role_Name`", nullable = false, length = 255)
    public String getRoleName() {
        return this.roleName;
    }

    public void setRoleName(String roleName) {
        this.roleName = roleName;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE, mappedBy = "roles")
    public List<EmpRoles> getEmpRoleses() {
        return this.empRoleses;
    }

    public void setEmpRoleses(List<EmpRoles> empRoleses) {
        this.empRoleses = empRoleses;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE, mappedBy = "roles")
    public List<LeaveTypeRoleMapping> getLeaveTypeRoleMappings() {
        return this.leaveTypeRoleMappings;
    }

    public void setLeaveTypeRoleMappings(List<LeaveTypeRoleMapping> leaveTypeRoleMappings) {
        this.leaveTypeRoleMappings = leaveTypeRoleMappings;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE, mappedBy = "roles")
    public List<OtherLeavesRoleMapping> getOtherLeavesRoleMappings() {
        return this.otherLeavesRoleMappings;
    }

    public void setOtherLeavesRoleMappings(List<OtherLeavesRoleMapping> otherLeavesRoleMappings) {
        this.otherLeavesRoleMappings = otherLeavesRoleMappings;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Roles)) return false;
        final Roles roles = (Roles) o;
        return Objects.equals(getRoleId(), roles.getRoleId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getRoleId());
    }
}

