/*Generated by WaveMaker Studio*/
package com.testutils.leave_application_db;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

/**
 * TempEmpLeaveData generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`temp_emp_leave_data`")
public class TempEmpLeaveData implements Serializable {

    private Integer recordId;
    private Integer accruedLeaves;
    private Integer carryFw;
    private Integer carryFwPrevMonth;
    private int empId;
    private String fiscalYear;
    private Integer leavesUtilized;
    private Integer month;
    private Integer totalAccruedLeaves;
    private int totalAvlPto;
    private Integer totalLeavesUtilized;

    @Id
    @Column(name = "`Record_ID`", nullable = false, scale = 0, precision = 10)
    public Integer getRecordId() {
        return this.recordId;
    }

    public void setRecordId(Integer recordId) {
        this.recordId = recordId;
    }

    @Column(name = "`accrued_leaves`", nullable = true, scale = 0, precision = 10)
    public Integer getAccruedLeaves() {
        return this.accruedLeaves;
    }

    public void setAccruedLeaves(Integer accruedLeaves) {
        this.accruedLeaves = accruedLeaves;
    }

    @Column(name = "`CARRY_FW`", nullable = true, scale = 0, precision = 10)
    public Integer getCarryFw() {
        return this.carryFw;
    }

    public void setCarryFw(Integer carryFw) {
        this.carryFw = carryFw;
    }

    @Column(name = "`carry_fw_prev_month`", nullable = true, scale = 0, precision = 10)
    public Integer getCarryFwPrevMonth() {
        return this.carryFwPrevMonth;
    }

    public void setCarryFwPrevMonth(Integer carryFwPrevMonth) {
        this.carryFwPrevMonth = carryFwPrevMonth;
    }

    @Column(name = "`EmpID`", nullable = false, scale = 0, precision = 10)
    public int getEmpId() {
        return this.empId;
    }

    public void setEmpId(int empId) {
        this.empId = empId;
    }

    @Column(name = "`Fiscal_Year`", nullable = true, length = 10)
    public String getFiscalYear() {
        return this.fiscalYear;
    }

    public void setFiscalYear(String fiscalYear) {
        this.fiscalYear = fiscalYear;
    }

    @Column(name = "`leaves_utilized`", nullable = true, scale = 0, precision = 10)
    public Integer getLeavesUtilized() {
        return this.leavesUtilized;
    }

    public void setLeavesUtilized(Integer leavesUtilized) {
        this.leavesUtilized = leavesUtilized;
    }

    @Column(name = "`month`", nullable = true, scale = 0, precision = 10)
    public Integer getMonth() {
        return this.month;
    }

    public void setMonth(Integer month) {
        this.month = month;
    }

    @Column(name = "`total_accrued_leaves`", nullable = true, scale = 0, precision = 10)
    public Integer getTotalAccruedLeaves() {
        return this.totalAccruedLeaves;
    }

    public void setTotalAccruedLeaves(Integer totalAccruedLeaves) {
        this.totalAccruedLeaves = totalAccruedLeaves;
    }

    @Column(name = "`Total_AVL_PTO`", nullable = false, scale = 0, precision = 10)
    public int getTotalAvlPto() {
        return this.totalAvlPto;
    }

    public void setTotalAvlPto(int totalAvlPto) {
        this.totalAvlPto = totalAvlPto;
    }

    @Column(name = "`Total_Leaves_Utilized`", nullable = true, scale = 0, precision = 10)
    public Integer getTotalLeavesUtilized() {
        return this.totalLeavesUtilized;
    }

    public void setTotalLeavesUtilized(Integer totalLeavesUtilized) {
        this.totalLeavesUtilized = totalLeavesUtilized;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof TempEmpLeaveData)) return false;
        final TempEmpLeaveData tempEmpLeaveData = (TempEmpLeaveData) o;
        return Objects.equals(getRecordId(), tempEmpLeaveData.getRecordId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getRecordId());
    }
}

